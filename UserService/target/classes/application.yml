server:
  port: 8081

spring:
  application:
    name: USER-SERVICE
  datasource:
    jpa:
      format-sql: 'true'
      properties:
        hibernate:
          dialect: org.hibernate.dialect.MySQL8InnoDBDialect
      generate-ddl: 'true'
      hibernate:
        ddl-auto: update
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
      defer-datasource-initialization: 'true'
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    url: jdbc:mysql://localhost:3306/microservices?createDatabaseIfNotExist=true
    initialize: 'true'
  jpa:
    show-sql: 'true'

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-48568461.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oafrax066RgkwayG5d7
            client-secret: d5ve_1QdjdCd0w950-jrOgduqwpX7LzH0ne98g5VS6S12SZX-bXvRTPpQqAC8XN2

        provider:
          okta:
            issuer-uri: https://dev-48568461.okta.com/oauth2/default



  config:
    import: configserver:http://localhost:8085

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 2
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED


  retry:
    instances:
      ratingHotelRetry:
        max-attempts: 5
        wait-duration: 5s

  rateLimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s

okta:
  oauth2:
    issuer: https://dev-48568461.okta.com/oauth2/default
    audience: api://default





#  profile:
#    active: dev

#
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka